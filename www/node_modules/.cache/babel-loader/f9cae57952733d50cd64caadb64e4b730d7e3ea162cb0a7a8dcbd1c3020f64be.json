{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DS User\\\\Desktop\\\\ToDoApp-Fullstack\\\\www\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [editContent, setEditContent] = useState(\"\");\n  const [taskList, setTaskList] = useState([]);\n  const [taskId, setTaskId] = useState(null);\n  const fetchTasks = async () => {\n    const data = await axios.get('/api/tasks');\n    const {\n      tasks\n    } = data.data;\n    setTaskList(tasks);\n  };\n  const handleChange = (e, field) => {\n    if (field === 'edit') {\n      setEditContent(e.target.value);\n    } else {\n      setContent(e.target.value);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`/api/tasks/${id}`);\n      const updatedList = taskList.filter(task => task.id !== id);\n      setTaskList(updatedList);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  const toggleEdit = task => {\n    setTaskId(task.id);\n    setEditContent(task.content);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editContent) {\n        const data = await axios.put(`/api/tasks/${taskId}`, {\n          content: editContent\n        });\n        const updatedTask = data.data.task;\n        const updatedList = taskList.map(task => {\n          if (task.id === taskId) {\n            return task = updatedTask;\n          }\n          return task;\n        });\n        setTaskList(updatedList);\n      } else {\n        const data = await axios.post(\"/api/tasks\", {\n          content\n        });\n        setTaskList([...taskList, data.data]);\n      }\n      setContent('');\n      setEditContent('');\n      setTaskId(null);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => handleChange(e, 'content'),\n          type: \"text\",\n          name: \"content\",\n          id: \"content\",\n          placeholder: \"Write a task. :)\",\n          value: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: taskList.map(task => {\n          if (taskId === task.id) {\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleChange(e, 'edit'),\n                type: \"text\",\n                name: \"editContent\",\n                id: \"editContent\",\n                placeholder: \"Write a task. :)\",\n                value: editContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [task.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleEdit(task),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(task.id),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4gVwxxoMU34E3PEXnxfSUb7ORgI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","format","jsxDEV","_jsxDEV","App","_s","content","setContent","editContent","setEditContent","taskList","setTaskList","taskId","setTaskId","fetchTasks","data","get","tasks","handleChange","e","field","target","value","handleDelete","id","delete","updatedList","filter","task","err","console","error","message","toggleEdit","handleSubmit","preventDefault","put","updatedTask","map","post","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","name","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DS User/Desktop/ToDoApp-Fullstack/www/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport {format} from 'date-fns'\nimport './App.css';\n\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  const [editContent, setEditContent] = useState(\"\");\n  const [taskList, setTaskList] = useState([]);\n  const [taskId, setTaskId] = useState(null);\n  \n  const fetchTasks = async () => {\n    const data = await axios.get('/api/tasks');\n    const {tasks} = data.data;\n    setTaskList(tasks);\n  }\n\n  const handleChange = (e, field) => {\n    if (field === 'edit') {\n      setEditContent(e.target.value)\n    } else {\n      setContent(e.target.value);\n    }\n  }\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`/api/tasks/${id}`);\n      const updatedList = taskList.filter(task => task.id !== id);\n      setTaskList(updatedList);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  const toggleEdit = (task) => {\n    setTaskId(task.id);\n    setEditContent(task.content);\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try{\n      if (editContent){\n        const data = await axios.put(`/api/tasks/${taskId}`, {content: editContent});\n        const updatedTask = data.data.task;\n        const updatedList = taskList.map(task => {\n          if(task.id === taskId){\n            return task = updatedTask\n          }\n          return task\n        })\n        setTaskList(updatedList)\n      } else {\n        const data = await axios.post(\"/api/tasks\", {content});\n        setTaskList([...taskList, data.data]);\n      }\n      setContent('');\n      setEditContent('');\n      setTaskId(null);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    fetchTasks();\n  }, [])\n\n  return (\n    <div className=\"App\">\n     <section>\n     <form onSubmit={handleSubmit}>\n        <label htmlFor='content'>Content</label>\n        <input\n          onChange={(e) => handleChange(e, 'content')}\n          type=\"text\"\n          name=\"content\"\n          id=\"content\"\n          placeholder=\"Write a task. :)\"\n          value={content}\n        />\n        <button type=\"submit\">Submit</button>\n     </form>\n     </section>\n     <section>\n      <ul>\n        {taskList.map(task => {\n          if (taskId === task.id) {\n            return (\n              <form onSubmit={handleSubmit} key={task.id}>\n              <input\n                onChange={(e) => handleChange(e, 'edit')}\n                type=\"text\"\n                name=\"editContent\"\n                id=\"editContent\"\n                placeholder=\"Write a task. :)\"\n                value={editContent}\n              />\n              <button type='submit'>Submit</button>\n              </form>\n            )\n          } else {\n            return (\n              <li key={task.id}>\n                {task.content}\n                <button onClick={() => toggleEdit(task)}>Edit</button>\n                <button onClick={() => handleDelete(task.id)}>X</button>\n              </li>\n            )\n          }\n        })}\n      </ul>\n     </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}